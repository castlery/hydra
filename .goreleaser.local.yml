project_name: hydra

env:
  - GO111MODULE=on
  - BUILDINFO_HASH=github.com/ory/hydra/driver/config.Commit
  - BUILDINFO_TAG=github.com/ory/hydra/driver/config.Version
  - BUILDINFO_DATE=github.com/ory/hydra/driver/config.Date
  - DOCKERFILE=.docker/Dockerfile-alpine
  - IMAGE_PREFIX=825303761615.dkr.ecr.ap-southeast-1.amazonaws.com

before:
  hooks:
    - go mod download
    - git checkout -- go.sum go.mod

builds:
  -
    id: alpine-cgo-amd64
    flags:
      - "-tags=sqlite,hsm,json1"
    ldflags:
      - "-s -w -X {{.Env.BUILDINFO_TAG}}={{.Tag}} -X {{.Env.BUILDINFO_HASH}}={{.FullCommit}} -X {{.Env.BUILDINFO_DATE}}={{.Date}}"
    binary: "{{ .ProjectName }}"
    env:
      - CGO_ENABLED=1
      - CC=musl-gcc
    goarch:
      - amd64
    goos:
      - linux

  # -
  #   id: alpine-cgo-arm64
  #   flags:
  #     - -tags
  #     - sqlite
  #   ldflags:
  #     - "-s -w -X {{.Env.BUILDINFO_TAG}}={{.Tag}} -X {{.Env.BUILDINFO_HASH}}={{.FullCommit}} -X {{.Env.BUILDINFO_DATE}}={{.Date}}"
  #   binary: "{{ .ProjectName }}"
  #   env:
  #     - CGO_ENABLED=1
  #     - CC=aarch64-linux-musl-gcc
  #   goarch:
  #     - arm64
  #   goos:
  #     - linux

  # -
  #   id: default
  #   ldflags:
  #     - "-s -w -X {{.Env.BUILDINFO_TAG}}={{.Tag}} -X {{.Env.BUILDINFO_HASH}}={{.FullCommit}} -X {{.Env.BUILDINFO_DATE}}={{.Date}}"
  #   binary: "{{ .ProjectName }}"
  #   env:
  #     - CGO_ENABLED=0
  #   goarch:
  #     - amd64
  #     - 386
  #     - arm
  #     - arm64
  #   goarm:
  #     - 6
  #     - 7
  #   goos:
  #     - linux
  #     - windows
  #     - darwin
  #     # Disabled because build will time out, it works though:
  #     # - freebsd

archives:
  # - id: windows-cgo
  #   builds:
  #     - windows-cgo
  #   replacements:
  #     darwin: macOS
  #     386: 32bit
  #     amd64: 64bit
  #   format_overrides:
  #     - goos: windows
  #       format: zip
  #   name_template: "{{ .ProjectName }}_{{ .Version }}-{{ .Os }}_sqlite_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"

  # - id: macos-cgo
  #   builds:
  #     - macos-cgo
  #   replacements:
  #     darwin: macOS
  #     386: 32bit
  #     amd64: 64bit
  #   format_overrides:
  #     - goos: windows
  #       format: zip
  #   name_template: "{{ .ProjectName }}_{{ .Version }}-{{ .Os }}_sqlite_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"

  # - id: linux-cgo
  #   builds:
  #     - linux-cgo-arm64
  #     - linux-cgo-amd64
  #     - linux-cgo-arm
  #   replacements:
  #     darwin: macOS
  #     386: 32bit
  #     amd64: 64bit
  #   format_overrides:
  #     - goos: windows
  #       format: zip
  #   name_template: "{{ .ProjectName }}_{{ .Version }}-{{ .Os }}_sqlite_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"

  # - id: alpine-cgo
  #   builds:
  #     - alpine-cgo-amd64
  #     - alpine-cgo-arm64
  #     - alpine-cgo-arm
  #   replacements:
  #     darwin: macOS
  #     386: 32bit
  #     amd64: 64bit
  #   format_overrides:
  #     - goos: windows
  #       format: zip
  #   name_template: "{{ .ProjectName }}_{{ .Version }}-{{ .Os }}_sqlite_libmusl_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"

  # - id: default
  #   builds:
  #     - default
  #   replacements:
  #     darwin: macOS
  #     386: 32bit
  #     amd64: 64bit
  #   format_overrides:
  #     - goos: windows
  #       format: zip
  #   name_template: "{{ .ProjectName }}_{{ .Version }}-{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"

# snapshot:
#   name_template: "{{ .Tag }}-next"

# changelog:
#   sort: asc

# release:
#   prerelease: auto
#   name_template: "{{ .Tag }}"
#   footer: |
#     {{ with .pub_key }}
#     Artifacts can be verified with [cosign](https://github.com/sigstore/cosign) using [this public key]({{ . }}).
#     {{ end }}
#   extra_files:
#     - glob: ./dist/*.bom.json

dockers:
  - image_templates:
      - "{{.Env.IMAGE_PREFIX}}/oryd/{{ .ProjectName }}:v{{ .Version }}-amd64"
    use: buildx
    dockerfile: "{{ .Env.DOCKERFILE }}"
    goarch: amd64
    ids:
      - alpine-cgo-amd64
    build_flag_templates:
      - "--platform=linux/amd64"

  # - image_templates:
  #     - "{{.Env.IMAGE_PREFIX}}/oryd/{{ .ProjectName }}:v{{ .Version }}-arm64"
  #   use: buildx
  #   goarch: arm64
  #   dockerfile: "{{ .dockerfile }}"
  #   ids:
  #     - alpine-cgo-arm64
  #   build_flag_templates:
  #     - "--platform=linux/arm64/v8"

docker_manifests:
  # You can have multiple Docker manifests.
  -
    # ID of the manifest, needed if you want to filter by it later on (e.g. on custom publishers).
    id: tag

    # Name template for the manifest.
    # Defaults to empty.
    name_template: "{{.Env.IMAGE_PREFIX}}/oryd/{{ .ProjectName }}:{{ .Tag }}"

    # Image name templates to be added to this manifest.
    # Defaults to empty.
    image_templates:
      - "{{.Env.IMAGE_PREFIX}}/oryd/{{ .ProjectName }}:{{ .Tag }}-amd64"
      # - "{{.Env.IMAGE_PREFIX}}/oryd/{{ .ProjectName }}:{{ .Tag }}-arm64"

  # -
  #   # ID of the manifest, needed if you want to filter by it later on (e.g. on custom publishers).
  #   id: major

  #   # Name template for the manifest.
  #   # Defaults to empty.
  #   name_template: "oryd/{{ .ProjectName }}:v{{ .Major }}"

  #   # Image name templates to be added to this manifest.
  #   # Defaults to empty.
  #   image_templates:
  #     - "oryd/{{ .ProjectName }}:{{ .Tag }}-amd64"
  #     - "oryd/{{ .ProjectName }}:{{ .Tag }}-arm64"
  #     - "oryd/{{ .ProjectName }}:{{ .Tag }}-armv7"
  #     - "oryd/{{ .ProjectName }}:{{ .Tag }}-armv6"

  # -
  #   # ID of the manifest, needed if you want to filter by it later on (e.g. on custom publishers).
  #   id: minor

  #   # Name template for the manifest.
  #   # Defaults to empty.
  #   name_template: "oryd/{{ .ProjectName }}:v{{ .Major }}.{{ .Minor }}"

  #   # Image name templates to be added to this manifest.
  #   # Defaults to empty.
  #   image_templates:
  #     - "oryd/{{ .ProjectName }}:{{ .Tag }}-amd64"
  #     - "oryd/{{ .ProjectName }}:{{ .Tag }}-arm64"
  #     - "oryd/{{ .ProjectName }}:{{ .Tag }}-armv7"
  #     - "oryd/{{ .ProjectName }}:{{ .Tag }}-armv6"

  # -
  #   # ID of the manifest, needed if you want to filter by it later on (e.g. on custom publishers).
  #   id: patch

  #   # Name template for the manifest.
  #   # Defaults to empty.
  #   name_template: "oryd/{{ .ProjectName }}:v{{ .Major }}.{{ .Minor }}.{{ .Patch }}"

  #   # Image name templates to be added to this manifest.
  #   # Defaults to empty.
  #   image_templates:
  #     - "oryd/{{ .ProjectName }}:{{ .Tag }}-amd64"
  #     - "oryd/{{ .ProjectName }}:{{ .Tag }}-arm64"
  #     - "oryd/{{ .ProjectName }}:{{ .Tag }}-armv7"
  #     - "oryd/{{ .ProjectName }}:{{ .Tag }}-armv6"

  # -
  #   # ID of the manifest, needed if you want to filter by it later on (e.g. on custom publishers).
  #   id: latest

  #   # Name template for the manifest.
  #   # Defaults to empty.
  #   name_template: "oryd/{{ .ProjectName }}:latest"

  #   # Image name templates to be added to this manifest.
  #   # Defaults to empty.
  #   image_templates:
  #     - "oryd/{{ .ProjectName }}:{{ .Tag }}-amd64"
  #     - "oryd/{{ .ProjectName }}:{{ .Tag }}-arm64"
  #     - "oryd/{{ .ProjectName }}:{{ .Tag }}-armv7"
  #     - "oryd/{{ .ProjectName }}:{{ .Tag }}-armv6"

